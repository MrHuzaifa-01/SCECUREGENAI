# @TEST-EXEC: ${HILTIC} -j %INPUT >output
# @TEST-EXEC: btest-diff output

module Foo {

import hilti;

global uint<16> i = 10;
global uint<16> j = 20;
global uint<32> k = 20;
global uint<32> l = 30;
global uint<32> m = 3;
global uint<8> n = 128;

assert i + j == 30;
assert j - i == 10;
assert i * j == 200;
assert l / i == 3;
assert l / i == 3;
assert l % k == 10;
assert i ** m == 1000;
assert i << 2 == 40;
assert k >> 2 == 5;
assert ~n == 127;
assert k & ~16 == 4;
assert k | 32 == 52;
assert k ^ 4 == 16;

assert j == k;
assert i != j;
assert i < j;
assert !(j < i);
assert j > i;
assert !(i > j);

assert j >= j;
assert j >= i;
assert !(j <= i);

assert j <= j;
assert i <= j;
assert !(i >= j);

assert --i == 9;
assert i-- == 9;
assert i == 8;

assert ++i == 9;
assert i++ == 9;
assert i == 10;

i += 5;
assert i == 15;
i -= 5;
assert i == 10;
i *= 3;
assert i == 30;
i /= 3;
assert i == 10;

global uint<64> u = 10;
assert uint8(20) == uint8(2 * u);
assert uint16(20) == uint16(2 * u);
assert uint32(20) == uint32(2 * u);
assert uint64(20) == uint64(2 * u);

global uint<64> s = 10;
assert uint8(20) == uint8(2 * s);
assert uint16(20) == uint16(2 * s);
assert uint32(20) == uint32(2 * s);
assert uint64(20) == uint64(2 * s);

}
