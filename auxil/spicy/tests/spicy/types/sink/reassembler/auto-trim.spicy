# @TEST-EXEC: spicy-driver -p Mini::Main %INPUT >output </dev/null
# @TEST-EXEC: btest-diff output
#
# Without auto-trimming we can detect overlaps even after data has been delivered.

module Mini;

public type Main = unit {

    sink data;

    on %init {
        self.data.connect(new Sub);
        self.data.set_auto_trim(False);
        self.data.write(b"123", 0);
        self.data.write(b"456", 3);
        self.data.write(b"X", 1); # Reports overlap.
        self.data.write(b"Y", 1); # Reports overlap again.
        self.data.trim(3);
        self.data.write(b"Z", 1); # Now not anymore.
    }
};

public type Sub = unit {
    s: bytes &eod;

    on %done {
        print self.s;
    }

    on %gap(seq: uint64, len: uint64)  {
        print "Gap at input position %u, length %u" % (seq, len);
        }

    on %skipped(seq: uint64){
        print "Skipped to position %u" % seq;
        }

    on %undelivered(seq: uint64, data: bytes) {
        print "Undelivered data at position %u: %s" % (seq, data);
        }

    on %overlap(seq: uint64, old: bytes, new_: bytes) {
        print "Overlap at %u: %s vs %s" % (seq, old, new_);
        }
};
