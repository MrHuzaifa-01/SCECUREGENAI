# @TEST-REQUIRES: [ $(uname -m) != i686 ]
# @TEST-EXEC-FAIL: ${SPICYC} -j %INPUT >>output 2>&1

# @TEST-EXEC: btest-diff output

module Foo;

global u8_hi = uint8(0x100);
global u16_hi = uint16(0x10000);
global u32_hi = uint32(0x100000000);


global i8_hi = int8(0x80);
global i16_hi = int16(0x8000);
global i32_hi = int32(0x80000000);

# @TEST-START-NEXT
module Foo; global u8_banana = uint8('üçå');

# @TEST-START-NEXT
module Foo; global u8_lo = uint8(-1);


# @TEST-START-NEXT
module Foo; global u16_lo = uint16(-1);


# @TEST-START-NEXT
module Foo; global u32c = uint32(-1);


# @TEST-START-NEXT
module Foo; global u64_lo = uint64(-1);

# @TEST-START-NEXT
module Foo; global u64_hi = uint64(0x10000000000000000); # integer lex error, not ctor parse error

# @TEST-START-NEXT

module Foo;

global i64_hi = int64(0x8000000000000001);

# @TEST-START-NEXT
module Foo;

global i64_lo = int64(-0x8000000000000001);

# @TEST-START-NEXT
module Foo;

global i8_lo = int8(-0x81);
global i16_lo = int16(-0x8001);
global i32_lo = int32(-0x80000001);
